// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAppOblig4.Models;

#nullable disable

namespace WebAppOblig4.Migrations
{
    [DbContext(typeof(H600861Context))]
    partial class H600861ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAppOblig4.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CheckinDate")
                        .HasColumnType("date")
                        .HasColumnName("checkin_date");

                    b.Property<DateOnly>("CheckoutDate")
                        .HasColumnType("date")
                        .HasColumnName("checkout_date");

                    b.Property<string>("CustomersEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("customers_email");

                    b.Property<int?>("RoomId")
                        .HasColumnType("integer");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("room_type");

                    b.HasKey("Id")
                        .HasName("bookings_pkey");

                    b.HasIndex("CustomersEmail");

                    b.HasIndex("RoomId");

                    b.ToTable("bookings", "hotel");
                });

            modelBuilder.Entity("WebAppOblig4.Models.Customer", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("password");

                    b.HasKey("Email")
                        .HasName("email_pk");

                    b.HasIndex(new[] { "Email" }, "customers_email_key")
                        .IsUnique();

                    b.ToTable("customers", "hotel");
                });

            modelBuilder.Entity("WebAppOblig4.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NumBeds")
                        .HasColumnType("integer")
                        .HasColumnName("num_beds");

                    b.Property<decimal>("PricePerNight")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("price_per_night");

                    b.Property<int>("roomType")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("rooms_pkey");

                    b.ToTable("rooms", "hotel");
                });

            modelBuilder.Entity("WebAppOblig4.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("integer")
                        .HasColumnName("room_number");

                    b.Property<string>("TaskNotes")
                        .HasColumnType("text")
                        .HasColumnName("task_notes");

                    b.Property<string>("TaskStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("task_status")
                        .HasDefaultValueSql("'new'::character varying");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("task_type");

                    b.HasKey("Id")
                        .HasName("tasks_pkey");

                    b.ToTable("tasks", "hotel");
                });

            modelBuilder.Entity("WebAppOblig4.Models.Booking", b =>
                {
                    b.HasOne("WebAppOblig4.Models.Customer", "CustomersEmailNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomersEmail")
                        .IsRequired()
                        .HasConstraintName("email_fk");

                    b.HasOne("WebAppOblig4.Models.Room", null)
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId");

                    b.Navigation("CustomersEmailNavigation");
                });

            modelBuilder.Entity("WebAppOblig4.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("WebAppOblig4.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
